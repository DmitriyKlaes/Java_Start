package ru.Geekbrains;

import java.util.LinkedList;

public class Lec04_LinkedList {
    public static void main(String[] args) {
        /*
        Список (абстрактная структура... НЕ List) – гибкая структура данных,
        позволяющая легко менять свой размер.
        Элементы доступны для вставки или удаления в любой позиции.

        Односвязный список - это список, в текущем элементе которого
        хранится ниформация о расположении только следующего элемента в списке

        Двусвязный список - это список, в текущем элементе которого
        хранится информация о расположении следующего и предыдущего элемента в списке

        Циклический односвязный список - это список, в последнем элементе которого
        хранится информация о следующем элементе, который в свою очередь является
        первым элементом

        Двунаправленный циклический список - это список в последнем элементе которого
        хранится информация о следующем элементе, который в свою очередь является
        первым элементом, а в первом элементе хранится информация о расположении последнего элемента в списке
        */

        LinkedList<Integer> ll = new LinkedList<>();
        ll.add(1);
        ll.add(2);
        ll.add(3);

        /*
        Методы для LinkedList

        peek (): возвращает первый узел или возвращает ноль, если размер LinkedList равен 0
        peekFirst (): возвращает первый узел или возвращает ноль, если размер LinkedList равен 0
        peekLast (): возвращает последний узел или ноль, если размер LinkedList равен 0
        element (): возвращает первый узел. Если размер LinkedList равен 0, генерируется исключение.
        poll (): удалить и вернуть первый узел, если размер LinkedList равен 0, вернуть ноль
        pollFirst (): удалить и вернуть первый узел или вернуть ноль, если размер LinkedList равен 0
        pollLast (): удалить и вернуть последний узел или вернуть ноль, если размер LinkedList равен 0
        offer (E e): добавить e в конец двусвязного списка
        offerFirst (E e): добавить e в начало двусвязного списка
        offerLast (E e): добавить e в конец двусвязного списка
        push (E e): вставить e в начало двусвязного списка
        pop (): удалить и вернуть первый узел
        */
    }
}
